{"version":3,"sources":["components/AutoComplete.tsx","components/Header.tsx","components/ReadMarkdown.tsx","index.tsx"],"names":["AutoComplete","useState","category","setCategory","category2","setCategory2","visible","setVisible","useEffect","a","fetch","process","response","json","GetCateGory","type","className","placeholder","onKeyUp","e","target","value","findValue","filter","v","name","substr","length","toUpperCase","map","i","href","Header","to","ReadMarkdown","match","markdownhtml","useRef","url","GetMarkdown","console","log","ref","ReactDOM","render","basename","exact","path","component","ReadMarkDown","document","getElementById"],"mappings":"qMA0CeA,EAxCM,WAAO,IAAD,EACYC,mBAAS,IADrB,mBAClBC,EADkB,KACRC,EADQ,OAEcF,qBAFd,mBAElBG,EAFkB,KAEPC,EAFO,OAGUJ,oBAAS,GAHnB,mBAGlBK,EAHkB,KAGTC,EAHS,KAKvBC,qBAAU,YACW,uCAAG,8BAAAC,EAAA,sEACOC,MAAMC,sDADb,cACVC,EADU,gBAECA,EAASC,OAFV,OAEZA,EAFY,OAGhBV,EAAYU,GAHI,2CAAH,qDAKjBC,KACD,IAYH,OACI,gCACI,uBAAOC,KAAK,OAAOC,UAAU,eAAeC,YAAY,wCAAUC,QAZnD,SAACC,GACpB,GAAsB,KAAnBA,EAAEC,OAAOC,MAER,OADAd,GAAW,IACJ,EAEX,IAAIe,EAAYpB,EAASqB,QAAO,SAACC,GAAD,OAAYA,EAAEC,KAAKC,OAAO,EAAGP,EAAEC,OAAOC,MAAMM,QAAQC,gBAAkBT,EAAEC,OAAOC,MAAMO,iBACrHvB,EAAaiB,GACbf,GAAW,MAMP,qBAAKS,UAAU,oBAAf,SACCV,EACGF,EAAUyB,KAAI,SAACL,EAAQM,GAAT,OACV,qBAAKd,UAAU,qBAAf,SACI,mBAAGe,KAAK,GAAR,SAAYP,EAAEC,QADuBK,MAI/C,WCXCE,EArBA,WAEX,OACI,iCACI,qBAAIhB,UAAU,UAAd,UACI,6BAAI,cAAC,IAAD,CAAMiB,GAAG,IAAIjB,UAAU,eAAvB,oBACJ,6BAAI,cAAC,EAAD,MACJ,+BACI,mBAAGA,UAAU,8BACb,qBAAKA,UAAU,iBAAf,SACI,+BACI,6BAAI,cAAC,IAAD,CAAMiB,GAAG,UAAT,SAAmB,mBAAGjB,UAAU,kCACpC,6BAAI,mBAAGA,UAAU,sDCc9BkB,EAtBM,SAAC,GAA+C,IAA9CC,EAA6C,EAA7CA,MACbC,EAAeC,iBAAuB,MAW5C,OATA7B,qBAAU,YACW,uCAAG,4BAAAC,EAAA,sEACOC,MAAM,QAAUyB,EAAMG,KAD7B,cACV1B,EADU,gBAECA,EAASC,OAFV,yDAAH,qDAIjB0B,GACAC,QAAQC,IAAIN,EAAMG,OACnB,IAGC,sBAAKtB,UAAU,OAAf,UACI,qBAAKA,UAAU,OAAf,SACI,cAAC,IAAD,CAAMiB,GAAG,UAAUjB,UAAU,YAA7B,4BAEJ,qBAAKA,UAAU,eAAe0B,IAAKN,Q,aClB/CO,IAASC,OACP,eAAC,IAAD,CAAeC,SAAS,QAAxB,UACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SAAsB,cAAC,IAAD,CAAUd,GAAG,kBACnC,cAAC,IAAD,CAAOc,KAAK,aAAaC,UAAWC,OAEtCC,SAASC,eAAe,W","file":"static/js/main.d18c82ee.chunk.js","sourcesContent":["import { useEffect, useState } from 'react'\r\n\r\nconst AutoComplete = () => {\r\n    let [category, setCategory]: any = useState([])\r\n    let [category2, setCategory2]: any = useState()\r\n    let [visible, setVisible]: any = useState(false)\r\n\r\n    useEffect(() => { \r\n        const GetCateGory = async () => {\r\n            const response = await fetch(process.env.REACT_APP_URL + '/wiki/json/category.json')\r\n            let json = await response.json()\r\n            setCategory(json)\r\n        }\r\n        GetCateGory()\r\n    }, [])\r\n\r\n    const SearchCateGory = (e: any) => {\r\n        if(e.target.value === '') {\r\n            setVisible(false)\r\n            return false\r\n        }\r\n        let findValue = category.filter((v: any) => v.name.substr(0, e.target.value.length).toUpperCase() === e.target.value.toUpperCase())\r\n        setCategory2(findValue)\r\n        setVisible(true)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <input type=\"text\" className=\"autocomplete\" placeholder=\"카테고리 검색\" onKeyUp={SearchCateGory} />\r\n            <div className=\"autocomplete-list\">\r\n            {visible ?\r\n                category2.map((v: any, i: number) =>\r\n                    <div className=\"autocomplete-items\" key={i}>\r\n                        <a href=\"\">{v.name}</a> \r\n                    </div>\r\n                )\r\n            : null} \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AutoComplete","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport AutoComplete from './AutoComplete'\r\n\r\nconst Header = () => {\r\n\r\n    return (\r\n        <header>\r\n            <ul className=\"tablist\">\r\n                <li><Link to=\"/\" className=\"tab selected\">WIKI</Link></li>\r\n                <li><AutoComplete /></li>\r\n                <li>\r\n                    <i className=\"fas fa-cog fa-lg settings\"></i>\r\n                    <div className=\"settings-modal\">\r\n                        <ul>\r\n                            <li><Link to=\"/Create\"><i className=\"fas fa-pen fa-lg settings\"></i></Link></li>\r\n                            <li><i className=\"fas fa-file-upload fa-lg settings\"></i></li>\r\n                        </ul>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React, { useRef, useEffect } from 'react'\r\nimport { RouteComponentProps } from 'react-router'\r\nimport { Link } from 'react-router-dom'\r\n\r\ninterface MatchParams {\r\n    id: string\r\n}\r\n\r\nconst ReadMarkdown = ({match}: RouteComponentProps<MatchParams>) => {\r\n    const markdownhtml = useRef<HTMLDivElement>(null)\r\n\r\n    useEffect(() => { \r\n        const GetMarkdown = async () => {\r\n            const response = await fetch('/wiki' + match.url)\r\n            let json = await response.json()\r\n        }\r\n        GetMarkdown()\r\n        console.log(match.url)\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"read\">\r\n            <div className=\"edit\">\r\n                <Link to=\"editurl\" className=\"edit-link\">편집</Link>        \r\n            </div>\r\n            <div className=\"markdown-div\" ref={markdownhtml}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReadMarkdown","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport Header from './components/Header'\r\nimport ReadMarkDown from './components/ReadMarkdown'\r\nimport { BrowserRouter, Route, Redirect } from \"react-router-dom\"\r\nimport './scss/Global.scss'\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename=\"/wiki\">\r\n    <Header />\r\n    <Route exact path=\"/\"><Redirect to=\"read/readme\"/></Route>\r\n    <Route path='/read/:doc' component={ReadMarkDown} />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n)\r\n\r\n"],"sourceRoot":""}