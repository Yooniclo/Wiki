{"version":3,"sources":["components/AutoComplete.tsx","components/Header.tsx","components/ReadMarkdown.tsx","components/EditMarkdown.tsx","index.tsx"],"names":["focus","AutoComplete","useState","category","setCategory","category2","setCategory2","visible","setVisible","Div","useRef","history","useHistory","useEffect","a","fetch","process","response","json","GetCateGory","type","className","placeholder","onKeyUp","e","target","value","findValue","filter","v","name","substr","length","toUpperCase","list","current","child","childNodes","keyCode","hasChildNodes","i","classList","remove","add","active","document","querySelector","textContent","push","ref","map","to","onClick","Header","ReadMarkdown","match","html","setHTML","url","GetMarkdown","console","log","params","doc","dangerouslySetInnerHTML","EditMarkDown","ReactDOM","render","basename","exact","path","component","ReadMarkDown","getElementById"],"mappings":"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","file":"static/js/main.e51dd2db.chunk.js","sourcesContent":["import { useEffect, useState, useRef } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\nlet focus: number = -1\r\n\r\nconst AutoComplete = () => {\r\n    let [category, setCategory]: any = useState([])\r\n    let [category2, setCategory2]: any = useState()\r\n    let [visible, setVisible]: any = useState(false)\r\n    let Div = useRef<HTMLDivElement>(null)\r\n    let history = useHistory()\r\n\r\n    useEffect(() => { \r\n        const GetCateGory = async () => {\r\n            const response = await fetch(process.env.REACT_APP_URL + '/wiki/json/category.json')\r\n            let json = await response.json()\r\n            setCategory(json)\r\n        }\r\n        GetCateGory()\r\n    }, [])\r\n\r\n    const SearchCateGory = (e: any) => {\r\n        if(e.target.value === '') {\r\n            setVisible(false)\r\n            return false\r\n        }\r\n        let findValue = category.filter((v: any) => v.name.substr(0, e.target.value.length).toUpperCase() === e.target.value.toUpperCase())\r\n        setCategory2(findValue)\r\n        setVisible(true)\r\n\r\n        let list: any = Div.current\r\n        let child: any = Div.current?.childNodes\r\n        //console.log(child_length)\r\n\r\n        // for (var i = 0; i < autocompletelist.childNodes.length; i++) {\r\n        //     autocompletelist.childNodes[i].classList.remove('autocomplete-active')\r\n        //   }\r\n        // autocompletelist.childNodes[currentFocus].classList.add('autocomplete-active')\r\n\r\n        switch(e.keyCode) {\r\n            case 40: \r\n                if(list.hasChildNodes()) {\r\n                    focus = focus + 1\r\n                    if(child.length <= focus) focus = 0\r\n                    if(focus < 0) focus = child.length - 1\r\n                    for(let i = 0; i < child.length; i++) child[i].classList.remove('autocomplete-active')\r\n                    child[focus].classList.add('autocomplete-active')\r\n                }\r\n                break\r\n            case 38:\r\n                if(list.hasChildNodes()) { \r\n                    focus = focus - 1     \r\n                    for(let i = 0; i < child.length; i++) child[i].classList.remove('autocomplete-active')\r\n                    if(child.length <= focus) focus = 0\r\n                    if(focus < 0) focus = child.length - 1\r\n                    child[focus].classList.add('autocomplete-active')\r\n                }\r\n                break\r\n            case 13: \r\n                const active = document.querySelector('.autocomplete-active')\r\n                let value: any = active?.childNodes[0].textContent\r\n                history.push(value)\r\n                setVisible(false)\r\n                break\r\n        }\r\n        //40: down 38: up 13: enter\r\n    }\r\n\r\n    const ChooseCateGory = (e: any) => {\r\n        console.log(Div.current?.childNodes)\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <input type=\"text\" className=\"autocomplete\" placeholder=\"카테고리 검색\" onKeyUp={SearchCateGory}/>\r\n            <div className=\"autocomplete-list\" ref={Div}>\r\n            {visible ?\r\n                category2.map((v: any, i: number) =>\r\n                    <div className=\"autocomplete-items\" key={i}>\r\n                        <Link to={`/read/${v.name}`} onClick={()=>setVisible(false)}>{v.name}</Link> \r\n                    </div>\r\n                )\r\n            : null} \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AutoComplete","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport AutoComplete from './AutoComplete'\r\n\r\nconst Header = () => {\r\n\r\n    return (\r\n        <header>\r\n            <ul className=\"tablist\">\r\n                <li><Link to=\"/\" className=\"tab selected\">WIKI</Link></li>\r\n                <li><AutoComplete /></li>\r\n                <li>\r\n                    <i className=\"fas fa-cog fa-lg settings\"></i>\r\n                    <div className=\"settings-modal\">\r\n                        <ul>\r\n                            <li><Link to=\"/Create\"><i className=\"fas fa-pen fa-lg settings\"></i></Link></li>\r\n                            <li><i className=\"fas fa-file-upload fa-lg settings\"></i></li>\r\n                        </ul>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React, { useEffect, useState } from 'react'\r\nimport { RouteComponentProps } from 'react-router'\r\nimport { Link } from 'react-router-dom'\r\n\r\ninterface MatchParams {\r\n    id: string,\r\n    doc: string\r\n}\r\n\r\nconst ReadMarkdown = ({match}: RouteComponentProps<MatchParams>) => {\r\n    const [html, setHTML]: any = useState()\r\n\r\n    useEffect(() => { \r\n        const GetMarkdown = async () => {\r\n            const response = await fetch(process.env.REACT_APP_URL + match.url)\r\n            let json = await response.json()\r\n            setHTML(json)\r\n        }\r\n        GetMarkdown()\r\n        console.log(match.params.doc)\r\n    }, [match.url])\r\n\r\n    return (\r\n        <div className=\"read\">\r\n            <div className=\"edit\">\r\n                <Link to={`/edit/${match.params.doc}`} className=\"edit-link\">편집</Link>        \r\n            </div>\r\n            <div className=\"markdown-div\" dangerouslySetInnerHTML={html}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReadMarkdown","import React, { useEffect, useState } from 'react'\r\nimport { RouteComponentProps } from 'react-router'\r\nimport { Link } from 'react-router-dom'\r\n\r\ninterface MatchParams {\r\n    id: string\r\n}\r\n\r\nconst EditMarkDown = ({match}: RouteComponentProps<MatchParams>) => {\r\n    const [html, setHTML]: any = useState()\r\n\r\n    useEffect(() => { \r\n        const GetMarkdown = async () => {\r\n            const response = await fetch(process.env.REACT_APP_URL + match.url)\r\n            let json = await response.json()\r\n            setHTML(json)\r\n        }\r\n        GetMarkdown()\r\n    }, [match.url])\r\n\r\n    return (\r\n        <div className=\"newDoc-container\">\r\n            <div className=\"newDoc-wrapper\">\r\n                <textarea placeholder=\"Markdown 문법을 적어주세요\"></textarea>\r\n            </div>\r\n            <div className=\"doc-category\">\r\n                <input type=\"text\"/>\r\n                <button></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditMarkDown","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport Header from './components/Header'\r\nimport ReadMarkDown from './components/ReadMarkdown'\r\nimport EditMarkDown from './components/EditMarkdown'\r\nimport { BrowserRouter, Route, Redirect } from \"react-router-dom\"\r\nimport './scss/Global.scss'\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename=\"/wiki\">\r\n    <Header />\r\n    <Route exact path=\"/\"><Redirect to=\"read/readme\"/></Route>\r\n    <Route path='/read/:doc' component={ReadMarkDown} />\r\n    <Route path='/edit/:doc' component={EditMarkDown} />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n)\r\n\r\n"],"sourceRoot":""}